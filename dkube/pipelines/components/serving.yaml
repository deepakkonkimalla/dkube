name: dkube-serving
name: dkube-serving
description: |
    Component which can be used to deploy a trained model on Dkube platform.
    Dkube serving provides,
    * Option to deploy with CPU/GPU.
    * A web server in the front and all the required infra to access the server.
    * Deployed as microservice. Serving URL is provided for any other application logic to consume the APIs for inference.
    * Attempts to decode and present some abstract information about the model.
    * Support for custom serving - user can pass any custom container and get access to dkube artifacts.
metadata:
  annotations: {platform: 'Dkube'}
  labels: {platform: 'Dkube', wfid: '{{workflow.uid}}', runid: '{{pod.name}}', stage: 'serving'}
inputs:
  - {name: name,            type: String,   optional: false,
     description: 'Required. Name of the dkube job.'}

  - {name: auth_token,      type: String,   optional: false,
     description: 'Required. Dkube authentication token.'}

  - {name: container,       type: Dict,     optional: false,
     description: 'Required. Container to use for training. Format: {"image":<url>, "username":<>, "password":<>}'}

  - {name: script,          type: String,   optional: true,
     description: 'Optional. Startup script to run inside container. If not passed expected is that container has entrypoint'}

  - {name: envs,            type: Dict,     optional: true,     default: '{}',
    description: 'Optional. Environments for training program. Format: {<key>:<val>,}.
                  Env var name inside container will be <key>=<val>'}

  - {name: program,         type: String,   optional: true,     default: '',
     description: 'Optional. Program imported in Dkube to be run inside container. If not specified container should have entrypoint.'}

  - {name: datasets,        type: List,     optional: true,     default: '[]',
     description: 'Optional. List of input datasets required for training. These datasets must be created in Dkube.'}

  - {name: models,          type: List,     optional: true,     default: '[]',
     description: 'Optional. List of pretrained models required for training. These models must be created in Dkube.'}

  - {name: ngpus,           type: Integer,  optional: true,     default: 0,
     description: 'Optional. Number of gpus the training program should use.'}

  - {name: config,          type: String,   optional: true,      default: '',
    description: 'Optional. Configuration for training job. Supports inline data.
                  Future inputs :
                      <ks://<configmap-name>> -> k8s configmap name'}

outputs:
  - {name: rundetails,      description: 'Details of the dkube run'}
  - {name: servingurl,      description: 'URL where the model server is available'}

implementation:
  container:
    image: ocdr/dkubepl:py
    command: ['serving']
    args: [
      --name, {inputValue: name}, 
      --token, {inputValue: auth_token},
      --container, {inputValue: container},
      --script, {inputValue: script},
      --envs, {inputValue: envs},
      --program, {inputValue: program},
      --datasets, {inputValue: datasets},
      --models, {inputValue: models},
      --ngpus, {inputValue: ngpus},
      --config, {inputValue: config},
      --runid, '{{pod.name}}'
    ]
    fileOutputs:
      rundetails:   /tmp/rundetails
      servingurl:   /tmp/servingurl
